{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","color","home","class","display","justifySelf","marginTop","marginRight","onClick","toggleMode","role","htmlFor","marginLeft","Textbox","useState","text","settext","backgroundColor","value","onChange","event","target","placeholder","rows","newText","toUpperCase","toggleAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","defaultProps","Alerts","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","about","searchButton","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc75a236.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        \r\n        <li className=\"nav-item\" style={{color:\"red\"}}>\r\n          <a className=\"nav-link\" href=\"#\">{props.home}</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"\">{props.about}</a>\r\n        </li> */}\r\n        <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}  style={{display:'flex',justifySelf:'end',marginTop:'8px',marginRight:'5px'}}>\r\n  <input class=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{marginLeft:'5px'}}>{props.mode==='light'?'Enable Dark Mode':'Enable Light Mode'} </label>\r\n</div>\r\n        {/* <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}  style={{display:'flex',justifySelf:'end',marginTop:'8px'}}>\r\n  <input class=\"form-check-input\" onClick={props.toggleColorMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault1\"/>\r\n  <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault1\" style={{marginLeft:'5px'}}>{props.colormode==='light'?'Enable Pro-Dark Mode':'Enable Pro-Light Mode'} </label>\r\n</div> */}\r\n      </ul>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    home:PropTypes.string,\r\n    about:PropTypes.string,\r\n    searchButton:PropTypes.string,\r\n    placeholder:PropTypes.string\r\n\r\n}\r\nNavbar.defaultProps={\r\n    title:'set tittle',\r\n    home:'set'\r\n}","import React, { useState }  from 'react'\r\n\r\nexport default function Textbox(props) {\r\n    const [text, settext] = useState('');\r\n    \r\n    \r\n\r\n    const handleUpClick=()=>{\r\n        let newText =text.toUpperCase();\r\n        settext(newText)\r\n        props.toggleAlert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n    const handleLowerClick=()=>{\r\n        let newText =text.toLowerCase();\r\n        settext(newText)\r\n        props.toggleAlert(\"Converted to Lowercase\",\"success\")\r\n\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText =''\r\n        settext(newText)\r\n        props.toggleAlert(\"Cleared text successfully\",\"success\")\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        settext(event.target.value)\r\n    }\r\n\r\n    const copyText=()=>{\r\n        var text=document.getElementById(\"mybox\");\r\n        text.select();\r\n        text.setSelectionRange(0,99999)\r\n        navigator.clipboard.writeText(text.value);\r\n        props.toggleAlert(\"Text Copied succesfully\",\"success\")\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n        <>\r\n        <div style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h1>Text Editor</h1>            \r\n            <div className=\"input-group mb-3 \"  >\r\n                <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnChange} placeholder=\"Start Typing\" id=\"mybox\" aria-label=\"With textarea\" rows=\"3\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div className=\"buttons\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={handleUpClick} >To Upper case</button>\r\n            <button className=\"btn btn-primary mx-3 my-2\" onClick={handleLowerClick}>To Lower case</button>\r\n            <button className=\"btn btn-primary mx-3 my-2\" onClick={handleClearClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-3 my-2\" onClick={copyText}>copy</button>\r\n        </div>\r\n\r\n            \r\n\r\n            <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n                <h3>Your text summary</h3>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    const capitalize= (word)=>{\r\n        let lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}  :  {props.alert.msg}</strong>\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\nimport Alerts from './components/Alerts';\n// import About from './components/About';\n// import {\n//   BrowserRouter as router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport React,{Fragment, useState} from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  // const [colormode, setColorMode] = useState('');\n  const [alert, setAlert] = useState('');\n\n  const toggleAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type})\n      setTimeout(() => {\n        setAlert(null)\n      },1200);\n  }\n  \n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#4871af'\n      toggleAlert(\"Dark Mode Enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor=\"white\"\n      toggleAlert(\"Light Mode Enabled\",\"success\")\n    }\n  }\n\n\n  return (\n\n  // <router>\n    <Fragment>\n    <Navbar title=\"Text Utilities\" toggleMode={toggleMode} mode={mode} home=\"Home\" about=\"About\" searchButton=\"Search\" placeholder=\" \"/>\n    <div className=\"blank\" style={{width:'80vw'}}>\n    <Alerts alert={alert} id=\"alertbox\"/>\n    <Textbox toggleAlert={toggleAlert} mode={mode}/>\n    \n    {/* <Routes>\n      <Route path=\"/\">\n      <Route exact path='/' element={<Textbox/>}/>\n      </Route>\n      <Route path=\"/about\">\n      <Route exact path='/about' element={<About heading=\"this is about section\"/>}/>\n     </Route>\n    </Routes> */}\n    \n    </div>\n    </Fragment>\n  // </router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}